/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#include "da-includes.dtsi"

/ {

        keymap {
                compatible = "zmk,keymap";

//---------+---------+---------+---------+---------+---------+      +---------+---------+---------+---------+---------+---------+     
//   tab        q        w         e         r         t                 y         u         i         o         p        bksp
// ctrl/esc     a        s         d         f         g                 h         j         k         l        ; :        ' 
//  rshift      z        x         c         v         b                 n         m        , <       . >       / ?      lshift
//                                cmd     lay_down  lalt/enter         space     lay_up hyper/ralt
//                             +---------+---------+---------+      +---------+---------+---------+
                default_layer {
                        bindings = <  
 &kp TAB    &kp Q    &kp W     &kp E     &kp R      &kp T            &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSPC
 &tp LCTRL ESC &kp A &kp S     &kp D     &kp F      &kp G            &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
 &kp LSHFT  &kp Z    &kp X     &kp C     &kp V      &kp B            &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &td_shft_caps
                               &kp LGUI &td_mo1_cmdret &tp LALT RET  &kp SPACE &mo 2     &kp RALT
                        >;
                };
                  
//---------+---------+---------+---------+---------+---------+    +---------+---------+---------+---------+---------+---------+     
//              !        @         #         $         %               ^         &         *         (         )          \
//              1        2         3         4         5               -         =         `         [         ]          |
//  rshift      6        7         8         9         0               _         +         ~         {         }       lshift
//                                cmd               lalt/enter       space      bksp     
//                             +---------+---------+---------+    +---------+---------+---------+
                layer_below {
                        bindings = <
  &trans    &kp EXCL &kp AT    &kp HASH  &kp DLLR &kp PRCNT       &kp CARET  &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSLH
  &trans    &kp N1   &kp N2    &kp N3    &kp N4   &kp N5          &kp MINUS  &kp EQUAL &kp GRAVE       &kp LBKT &kp RBKT &kp PIPE
  &kp LSHFT &kp N6   &kp N7    &kp N8    &kp N9   &kp N0          &kp UNDER  &kp PLUS  &kp TILDE       &kp LBRC &kp RBRC &kp RSHFT
                               &kp LGUI  &trans   &tp LALT RET    &kp SPACE  &kp BSPC  &trans
                        >;
                };

//---------+---------+---------+---------+---------+---------+    +---------+---------+---------+---------+---------+---------+     
//                                  è         é                                 ù         ì         ò       vol up     bksp
//   f1        à         f2        f3        f4      f5               ←         ↓         ↑         →       vol dn     bt1
//             f6        f7        f8        f9      f10           play/pause  prev     next                vol mut    bt2
//                             
//                             +---------+---------+---------+    +---------+---------+---------+
                   layer_above {
                          bindings = <
    &mac_mc  &mac_exp   &trans    &e_gr   &e_ac      &trans        &trans     &u_gr      &i_gr     &o_gr     &kp C_VOL_UP &kp BSPC
    &kp F1   &a_gr     &kp F2    &kp F3  &kp F4     &kp F5        &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT &kp C_VOL_DN &bt BT_CLR
    &trans   &kp F6    &kp F7    &kp F8  &kp F9     &kp F10       &kp C_PP   &kp C_PREV &kp C_NEXT&trans    &kp C_MUTE   &bt BT_NXT
                                 &trans  &trans     &trans        &trans     &trans     &trans
                          >;
                  };
                    
        };

};
